= 利用したサービス紹介

//textleft{
なおと
//}

本章ではチーム開発をした際に使用したサービスやツールの紹介をしていきます。

=={sec-ext1} 設計書作成

チーム開発と個人開発の大きな違いは作るものを皆で共有する必要があることです。
個人開発では自分さえ分かっていれば良いので設計書も作る必要がないかもしれません。
しかし、チーム開発で何をどう作るかが明確化しなければタスクを分割できません。

ここでは設計書のツール達を紹介していきます。

=== plantUML
==== plantUMLとは
http://plantuml.com/ja/

下記のような図(一例)をコードベースで作成できるサービスです。

 * シーケンス図
 * ユースケース図
 * クラス図
 * アクティビティ図
 * コンポーネント図
 * 状態遷移図
 * オブジェクト図
 * 配置図
 * タイミング図

コードベースで管理できるため、GitHubでバージョン管理が可能ということです。

//image[db][GitHubで差分][scale=0.8]

DBの設計書とシーケンス図で使用しました。DBのリレーション関係は図で書くのが分かりやすいです。
シーケンス図を書くことで誰がどんな処理を実装すればよいのか分かるのでタスクがふりやすくなります。

=== drow.io
==== drow.ioとは
https://www.draw.io/

フローチャートやオフィスのレイアウト図、ネットワーク図を作成できる無料の作図ツールです。
Chrome等のブラウザを使用して作成していきます。こちらもGitHubのコードベースで管理できます。

システム構成図を作成しました。

=== cacoo
==== cacooとは
フローチャートからワイヤーフレーム、プレゼン資料まで作れる「オンライン作図ツール」
最小3人(3アカウント)からのチーム単位なら無料でりようできます。

=== Keynote、googleスライド
デザインを考えたりする際にsketch、figmaなどのデザインツールが必要だと考えていませんか？
僕もデザインツールが必要だと思っていましたが学習コストが高く何度も挫折しました。
なので簡単なワイヤーレベルはKeynote等を使っています。慣れ親しんでいるので簡単に作成できます。
画像を入れる

=== スプレットシート
DBの設計書を書く際に使用しました。
GitHubで管理できないのが難点ですが、表敬形式で作成する際は何だかんだスプレットシートが便利です。
画像を入れる

=== swagger
API仕様書ツール
フロントとバックエンドの開発を分けるためにSwaggerを使いました。
SPAの良い所はフロントとバックエンドのタスクを切り分けられることです。


=={sec-ext2} ナレッジ共有

=== kibela

=== GitHubのプロジェクト内

=== GitHub Wiki

=={sec-ext3} コミュニケーションツール

=== slack

=== zooms

=== vscode live share

=={sec-ext4} Git Hub関連

=== pullpanda
=== Dependabot
=== organizationアカウント
=== Projects

=={sec-ext5} その他

=== ロゴメーカ
